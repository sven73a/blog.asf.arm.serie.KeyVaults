{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string"
    },
    "organization": {
      "type": "string"
    },
    "project": {
      "type": "string"
    },
    "JWTSecretKey": {
      "type": "string"
    },
    "AADdmaURI": {
      "type": "string",
      "metadata": {
        "description": "AAD Dma Uri"
      }
    },
    "AADInstance": {
      "type": "string",
      "metadata": {
        "description": "AAD Instance."
      }
    },
    "AADKeyVaultObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the Azure Key Vault service principal that will have access to the vault. Available from Get-AzureRMADServicePrincipal cmdlets. Look for the line Azure Key Fault"
      }
    },
    "AADGroupObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the AAD Group that will have access to the vault. Available from the Get-AzureRMADGroup cmdlet"
      }
    },
    "vaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for ARM template deployment"
      }
    },
    "enableVaultForVolumeEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for volume encryption"
      }
    },
    "ASdeviceRegistrationObjectId": {
      "type": "string",
      "metadata": {
        "description": "Id of the Device Registration API in the AAD."
      }

    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "tenantId": "[subscription().tenantId]",
    "keyVaultNameAppSecrets": "[concat(parameters('organization'), '-akv-as-', parameters('project'), '-', parameters('environment'))]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultNameAppSecrets')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault AppSecrets"
      },
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enabledForVolumeEncryption": "[parameters('enableVaultForVolumeEncryption')]",
        "tenantId": "[variables('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[parameters('AADKeyVaultObjectId')]",
            "permissions": {
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ]
            }
          },
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[parameters('AADGroupObjectId')]",
            "permissions": {
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ]
            }
          },
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[parameters('ASdeviceRegistrationObjectId')]",
            "permissions": {
              "keys": [],
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ],
        "sku": {
          "name": "[parameters('vaultSku')]",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultNameAppSecrets'), '/AADTenant')]",
      "apiVersion": "2016-10-01",
      "tags": {
        "displayName": "KVSecret_AADTenant"
      },
      "properties": {
        "value": "[variables('tenantId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultNameAppSecrets'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultNameAppSecrets'), '/AADdmaURI')]",
      "apiVersion": "2016-10-01",
      "tags": {
        "displayName": "KVSecret_AADdmaURI"
      },
      "properties": {
        "value": "[parameters('AADdmaURI')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultNameAppSecrets'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultNameAppSecrets'), '/AADInstance')]",
      "apiVersion": "2016-10-01",
      "tags": {
        "displayName": "KVSecret_AADInstance"
      },
      "properties": {
        "value": "[parameters('AADInstance')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultNameAppSecrets'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultNameAppSecrets'), '/JWTSecretKey')]",
      "apiVersion": "2016-10-01",
      "tags": {
        "displayName": "KVSecret_AS_JWtSecret"
      },
      "properties": {
        "value": "[parameters('JWTSecretKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultNameAppSecrets'))]"
      ]
    }
  ]
}